{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/order.ts","webpack:///./app/shop/cart.component.html","webpack:///./app/shop/cart.component.ts","webpack:///./app/shop/productList.component.css","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-9\\\">\\r\\n    <h3>{{ title }}</h3>\\r\\n    <product-list></product-list>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <div class=\\\"card bg-light p-2\\\">\\r\\n      <the-cart></the-cart>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: \"./app.component.html\",\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product Lists';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from \"./shop/productList.component\";\nimport { Cart } from './shop/cart.component';\n\nimport { DataService } from './shared/dataService';\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ProductList,\n      Cart\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\nimport { Order, OrderItem } from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    public products: Product[] = [];\r\n\r\n    public order: Order = new Order();\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    loadProducts(): Observable<boolean> {\r\n        return this.http.get('/api/products')\r\n                .pipe(\r\n                    map((data: Product[]) => {\r\n                        this.products = data;\r\n                        return true;\r\n                 }));\r\n    }\r\n\r\n    public AddToOrder(product: Product) {\r\n\r\n        let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n        if (item) {\r\n\r\n            item.quantity++;\r\n\r\n        } else {\r\n\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productArtId = product.artId;\r\n            item.productTitle = product.title;\r\n            item.productSize = product.size;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","﻿import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>#/Items: {{ data.order.items.length }}</div>\\r\\n<div>Subtotal: {{ data.order.subtotal | currency:\\\"USD\\\":true  }}</div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td>Product</td>\\r\\n            <td>#</td>\\r\\n            <td>$</td>\\r\\n            <td>Total</td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\\r\\n            <td>{{ o.quantity }}</td>\\r\\n            <td>{{ o.unitPrice | currency:\\\"USD\\\":true }}</td>\\r\\n            <td>{{ (o.unitPrice * o.quantity) | currency:\\\"USD\\\":true }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","﻿import { Component } from '@angular/core';\r\nimport { DataService } from '../shared/dataService';\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Cart {\r\n\r\n    constructor(private data: DataService) { }\r\n\r\n}","module.exports = \".product-info img {\\r\\n    max-width: 100px;\\r\\n    float: left;\\r\\n    margin: 0 1px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n    font-size: large;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"product-info col-md-4\\\" *ngFor=\\\"let p of products\\\">\\r\\n        <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n            <img src=\\\"/img/{{ p.artId }}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"p.title\\\" />\\r\\n            <h3>{{ p.category }} - {{ p.size }}</h3>\\r\\n            <ul class=\\\"product-props list-unstyled\\\">\\r\\n                <li><strong>Price</strong>: {{ p.price | currency:\\\"USD\\\":\\\"symbol\\\" }}</li>\\r\\n                <li><strong>Artist</strong>: {{ p.artist }}</li>\\r\\n                <li><strong>Title</strong>: {{ p.title }}</li>\\r\\n                <li><strong>Description</strong>: {{ p.artDescription }}</li>\\r\\n            </ul>\\r\\n            <button id=\\\"buyButton\\\" class=\\\"btn btn-success\\\" (click)=\\\"addProduct(p)\\\">Buy</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n  selector: \"product-list\",\r\n  templateUrl: \"productList.component.html\",\r\n  styleUrls: [\"productList.component.css\"]\r\n})\r\nexport class ProductList implements OnInit {\r\n    \r\n    public products: Product[] = [];\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dataService\r\n            .loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.dataService.products;\r\n                }\r\n            })\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.dataService.AddToOrder(product);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}